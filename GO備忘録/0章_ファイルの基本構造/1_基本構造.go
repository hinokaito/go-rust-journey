/*
こんにちは！go言語の世界にようこそ
このリポジトリでは、go言語学習者の私が、モチベーションと備忘録のために、学んだことを説明していきます。
口調に一貫性がなかったりしますが、ご容赦ください。
協力とスターをお願いします。頑張っていきましょう！
早速ですが、golangの基本構造について説明します。理解できなくても形さえ覚えればいいです！
*/

/*
	パッケージの宣言

Goのプログラムは、全て「パッケージ」というグループに属しています。
下記のpackage mainは、「このファイルは、ライブラリ（部品）ではなく、直接実行できるプログラムですよ！」と宣言するための特別なラベルです。
package: 「このファイルは○○というグループに属しています」という意味
main: 「実行可能なプログラムを意味する特別なパッケージ名」

イ〇ンの3階を思い出して、Go言語がそのお客さんだと考えてください。
服が売ってたり、おもちゃが売ってたり、様々なコーナーがあると思います。
ですが、それらのコーナーだけではGo言語さんは何もできません。
レジや対応コーナーが必要になります。package mainがそれにあたるのです。
Go言語さんはそれを自動で理解してレジに行き、購入処理を行います。
一方、その他のコーナーは、package "おもちゃ"　のようになるのです。
*/
package main

/*
	func main() {}

ここから処理がスタートします。
func: 関数の英語(Function)の略で、一連の処理をまとめたものです
main: package mainの中で、main関数という特別な関数です。
Goは、プログラムを実行するとき必ずこのmain関数を探してそこから処理を始めます。これをエントリーポイントと呼びます。
(): 関数に情報を渡すためのカッコです。
{}: この波カッコの中に実際にコンピュータにやってほしい命令を具体的に書いていきます
出発ゲートのようなものです！
*/
func main() {
	// ここにプログラムを書く
}
