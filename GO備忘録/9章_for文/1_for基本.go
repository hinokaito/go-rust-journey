package main

import "fmt"

/*
いよいよ、プログラミングの醍醐味、ループ処理の登場です。
一気にできることが増えるのでは無いのでしょうか？
しっかりと理解しておきましょう。
*/

func main() {
	//for 初期化ステートメント; 条件式; 後処理ステートメント {繰り返したい処理}

	// 0から9まで、10回ループする
	for i := 0; i < 10; i++ {
		fmt.Println("現在のiの値:", i)
	} // 現在のiの値: 0 現在のiの値: 1 現在のiの値: 2 現在のiの値: 3 現在のiの値: 4 現在のiの値: 5 現在のiの値: 6 現在のiの値: 7 現在のiの値: 8 現在のiの値: 9

	fmt.Println("---")

	// 5から1までカウントダウン
	for j := 5; j > 0; j-- {
		fmt.Println(j)
	} // 5 4 3 2 1
	fmt.Println("発射！")

	/*
	   1. 初期化ステートメント: ループの最初に一度だけ実行されます。ループカウンターの変数を宣言・初期化するのが一般的です。i := 0
	   2. 条件式: ループの各反復の前に評価されます。trueである限り、ループは続行されます。
	   3. 後処理ステートメント: 各反復の最後に実行されます。ループカウンターを増減させる処理を書くことが多いです。i++
	*/
}
