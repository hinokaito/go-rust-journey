package main

import "fmt"

/*
for rangeを使ってスライスや配列をループ処理する際、
2番目の返り値（値を受け取る変数）には、各要素のコピーが代入されます。 これは参照ではありません。

この挙動を知らないと、ループ内でスライスの要素を更新しようとして失敗する、
という典型的なバグを生み出します。

上に間違った書き方、
下に正しい書き方があります。
上を実行しコメントアウトしたあと、下のコメントを解除して実行してみてください。

コメントアウトは // です。
*/

// 間違った書き方

func main() {
	nums := []int{10, 20, 30}

	for _, v := range nums {
		// ここでの`v`は`nums[i]`のコピー。
		// `v`を更新しても、元のスライス`nums`には何の影響もない。
		v = v * 10
	}

	fmt.Println(nums) // [10 20 30] (何も変わっていない！)
}

// スライスの要素を更新したい場合は、インデックスを使って直接アクセスする必要があります
// 正しい書き方

// func main() {
//     nums := []int{10, 20, 30}

//     for i := range nums {
//         // インデックス`i`を使って元のスライスに直接アクセスする
//         nums[i] = nums[i] * 10
//     }

//     fmt.Println(nums) // [100 200 300] (正しく更新された！)
// }
