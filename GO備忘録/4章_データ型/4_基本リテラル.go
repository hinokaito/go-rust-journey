package main

/*リテラルとは？
数値や文字、文字列など特定のデータの値をソースコード内でそのまま直接書いたもの
*/

/*整数リテラル
通常は10進数として表らしますが、頭に特別な文字をつけることで、2進数、8進数、16進数として表現することもできます。
2進数: 0b
8進数: 0o
16進数: 0x
それぞれb,o,xの文字は大文字でもOKです。

さらに、整数リテラルの任意の箇所に_を挿入することで、読みやすくすることもできます。
例: 1_000_000  →　内部的には1000000として扱われます。先頭と末尾の_は無視されます。
*/

/*浮動小数点数リテラル
一般的な小数の記法(3.14など)のほかに、(3.14e10)のように指数形式で表現することもできます。
0xを前につけることで、16進で表現できます。pを付けることでべき乗を表せます。
例えば、0x1.p10は、1.0 * 2^10 = 1024となります。整数リテラルと同様に_を挿入することで、読みやすくすることもできます。
*/

/*runeリテラル
runeリテラルは文字を表し、先頭と最後に「'」を置きます。
多くの言語とは異なり、「"」で囲まれた文字の並びと「'」で囲まれた文字の並びは扱いが異なります。

1文字のUnicode文字('a' 'あ' '😀'など)
1文字の非ASCII文字('🍣' '𐐷'など)
8ビットの8進数値('0' '010' '0100'など)
8ビットの16進数値('\x10' '\xFF'など)
16ビットの16進数値('\u1234' '\U0010FFFF'など)
32ビットUnicode文字('\U00010000' '\U0010FFFF'など)

バックスラッシュでエスケープされたruneリテラルもあります。
例: '\n': 改行 '\t': タブ '\r': 復帰 '\'':シングルクオーテーション '\"':ダブルクオーテーション
	 '\\':バックスラッシュ '\000':NULL '\xFF':FF '\u1234':16進数の1234 '\U0010FFFF':32ビットの10FFFF
*/

/*文字列リテラル
文字列リテラルを表すのに、2つの方法があります。
1. 解釈対象の文字列リテラル
2. ロー文字列リテラル

解釈対象の文字列リテラルは、ダブルクオーテーションで囲まれた文字列で、
バックスラッシュでエスケープされた文字列を含むことができます。

ロー文字列リテラルは、バッククオートで囲まれた文字列で、
バックスラッシュでエスケープされた文字列を含むことができません。
また、ロー文字列リテラルは、複数行にまたがることができます。
*/

/*
リテラルは「型付けされていない」とみなされます。
*/
